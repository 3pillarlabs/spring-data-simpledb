/* Generated By:JavaCC: Do not edit this line. SimpleDBParserConstants.java */
package org.springframework.data.simpledb.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SimpleDBParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SELECT = 6;
  /** RegularExpression Id. */
  int FROM = 7;
  /** RegularExpression Id. */
  int WHERE = 8;
  /** RegularExpression Id. */
  int ORDER_BY = 9;
  /** RegularExpression Id. */
  int LIMIT = 10;
  /** RegularExpression Id. */
  int ASC = 11;
  /** RegularExpression Id. */
  int DESC = 12;
  /** RegularExpression Id. */
  int ALL_ITEMS = 13;
  /** RegularExpression Id. */
  int COUNT = 14;
  /** RegularExpression Id. */
  int ITEM_NAME = 15;
  /** RegularExpression Id. */
  int EQUALS = 16;
  /** RegularExpression Id. */
  int NOT_EQUALS = 17;
  /** RegularExpression Id. */
  int GTEQ = 18;
  /** RegularExpression Id. */
  int GT = 19;
  /** RegularExpression Id. */
  int LTEQ = 20;
  /** RegularExpression Id. */
  int LT = 21;
  /** RegularExpression Id. */
  int LIKE = 22;
  /** RegularExpression Id. */
  int NOT_LIKE = 23;
  /** RegularExpression Id. */
  int BETWEEN = 24;
  /** RegularExpression Id. */
  int IS_NOT_NULL = 25;
  /** RegularExpression Id. */
  int IS_NULL = 26;
  /** RegularExpression Id. */
  int IN = 27;
  /** RegularExpression Id. */
  int EVERY = 28;
  /** RegularExpression Id. */
  int AND = 29;
  /** RegularExpression Id. */
  int OR = 30;
  /** RegularExpression Id. */
  int INTERSECTION = 31;
  /** RegularExpression Id. */
  int NOT = 32;
  /** RegularExpression Id. */
  int QUOTED_STRING_LITERAL_NO_PERCENT_1 = 33;
  /** RegularExpression Id. */
  int QUOTED_STRING_LITERAL_NO_PERCENT_2 = 34;
  /** RegularExpression Id. */
  int QUOTED_STRING_LITERAL = 35;
  /** RegularExpression Id. */
  int IDENTIFIER = 36;
  /** RegularExpression Id. */
  int NUMBER = 37;
  /** RegularExpression Id. */
  int LETTER = 38;
  /** RegularExpression Id. */
  int DIGIT = 39;
  /** RegularExpression Id. */
  int LPAREN = 40;
  /** RegularExpression Id. */
  int RPAREN = 41;
  /** RegularExpression Id. */
  int LBRACKET = 42;
  /** RegularExpression Id. */
  int RBRACKET = 43;
  /** RegularExpression Id. */
  int COMMA = 44;
  /** RegularExpression Id. */
  int DOT = 45;
  /** RegularExpression Id. */
  int QUOTE = 46;
  /** RegularExpression Id. */
  int DOUBLE_QUOTE = 47;
  /** RegularExpression Id. */
  int BACKTICK = 48;
  /** RegularExpression Id. */
  int PERCENT = 49;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"select\"",
    "\"from\"",
    "\"where\"",
    "\"order by\"",
    "\"limit\"",
    "\"asc\"",
    "\"desc\"",
    "\"*\"",
    "\"count(*)\"",
    "\"itemName()\"",
    "\"=\"",
    "\"!=\"",
    "\" >=\"",
    "\">\"",
    "\"<=\"",
    "\"<\"",
    "\"like\"",
    "\"not like\"",
    "\"between\"",
    "\"is not null\"",
    "\"is null\"",
    "\"in\"",
    "<EVERY>",
    "\"and\"",
    "\"or\"",
    "\"intersection\"",
    "\"not\"",
    "<QUOTED_STRING_LITERAL_NO_PERCENT_1>",
    "<QUOTED_STRING_LITERAL_NO_PERCENT_2>",
    "<QUOTED_STRING_LITERAL>",
    "<IDENTIFIER>",
    "<NUMBER>",
    "<LETTER>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\".\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "\"`\"",
    "\"%\"",
  };

}
